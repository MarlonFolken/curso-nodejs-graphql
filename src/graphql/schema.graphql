type Query {
  hello: String!
  getPerson(name: String, age: Int): String
  getInt(age: Int!): Int
  getFloat: Float
  getString: String
  getBoolean: Boolean
  getID: ID
  getNumbers(numbers: [Int!]!): [Int]
  # Products
  product(id: ID!): Product
  products: [Product!]!
}

type Product {
  id: ID!
  name: String!
  price: Float!
  description: String!
  image: String!
  createdAt: String!
  categoryId: ID!
  category: Category!
}

type Category {
  id: ID!
  name: String!
  image: String!
}

# type Mutation, to modify information.
# addProduct, to add a new product.
type Mutation {
  addProduct(dataTransferObject: CreateProductInput): Product
  updateProduct(id: ID!, dataTransferObject: UpdateProductInput): Product
  deleteProduct(id: ID!): ID
}

# CreateProductInput, to define the input data for the addProduct mutation.
input CreateProductInput {
  name: String!
  price: Int!
  description: String!
  image: String!
  categoryId: ID!
}

input UpdateProductInput {
  name: String
  price: Int
  description: String
  image: String
  categoryId: ID
}